name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.20.2'

    - name: Fmt
      run: go fmt ./...

    - name: Vet
      run: go vet ./...

    - name: Test
      run: go test  -coverprofile c.out ./...

    - name: Code Coverage
      uses: aktions/codeclimate-test-reporter@v1
      if: github.ref == 'refs/heads/main'
      with:
        codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
        command: after-build --prefix github.com/arttor/helmify/  --coverage-input-type gocov

    - name: Install k8s cluster
      uses: helm/kind-action@v1.4.0
    - name: Install certs
      run: kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.1.1/cert-manager.yaml

    - name: Generate operator chart
      run: cat test_data/k8s-operator-ci.yaml | go run ./cmd/helmify examples/operator-ci
    - name: Fill secrets
      run: sed -i 's/""/"abc"/' ./examples/operator-ci/values.yaml
    - name: Dry-run in k8s cluster
      run: helm template ./examples/operator-ci | kubectl apply --dry-run=server -f -

      #     - name: cert install
#       run: kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.1.1/cert-manager.yaml

#     - name: helm install
#       run: helm install my-release ./mychart -n my-namespace --create-namespace
