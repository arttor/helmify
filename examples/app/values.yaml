containers:
- args:
  - --health-probe-bind-address=:8081
  - --metrics-bind-address=127.0.0.1:8080
  - --leader-elect
  command:
  - /manager
  env:
  - name: VAR1
    valueFrom:
      secretKeyRef:
        key: VAR1
        name: '{{ include "app.fullname" . }}-my-secret-vars'
  - name: VAR2
    valueFrom:
      secretKeyRef:
        key: VAR2
        name: '{{ include "app.fullname" . }}-my-secret-vars'
  - name: KUBERNETES_CLUSTER_DOMAIN
    value: '{{ quote .Values.kubernetesClusterDomain }}'
  image: '{{ .Values.myapp.app.image.repository }}:{{ .Values.myapp.app.image.tag
    | default .Chart.AppVersion }}'
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8081
    initialDelaySeconds: 15
    periodSeconds: 20
  name: app
  readinessProbe:
    httpGet:
      path: /readyz
      port: 8081
    initialDelaySeconds: 5
    periodSeconds: 10
  resources: '{{- toYaml .Values.myapp.app.resources | nindent 10 }}'
  securityContext: '{{- toYaml .Values.myapp.app.containerSecurityContext | nindent
    10 }}'
  volumeMounts:
  - mountPath: /my_config.properties
    name: manager-config
    subPath: my_config.properties
  - mountPath: /my.ca
    name: secret-volume
  - mountPath: /etc/props
    name: props
  - mountPath: /usr/share/nginx/html
    name: sample-pv-storage
- args:
  - --secure-listen-address=0.0.0.0:8443
  - --v=10
  env:
  - name: KUBERNETES_CLUSTER_DOMAIN
    value: '{{ quote .Values.kubernetesClusterDomain }}'
  image: '{{ .Values.myapp.proxySidecar.image.repository }}:{{ .Values.myapp.proxySidecar.image.tag
    | default .Chart.AppVersion }}'
  name: proxy-sidecar
  ports:
  - containerPort: 8443
    name: https
  resources: {}
- env:
  - name: KUBERNETES_CLUSTER_DOMAIN
    value: '{{ quote .Values.kubernetesClusterDomain }}'
  image: '{{ .Values.fluentdElasticsearch.fluentdElasticsearch.image.repository }}:{{
    .Values.fluentdElasticsearch.fluentdElasticsearch.image.tag | default .Chart.AppVersion
    }}'
  name: fluentd-elasticsearch
  resources: '{{- toYaml .Values.fluentdElasticsearch.fluentdElasticsearch.resources
    | nindent 10 }}'
  volumeMounts:
  - mountPath: /var/log
    name: varlog
  - mountPath: /var/lib/docker/containers
    name: varlibdockercontainers
    readOnly: true
kubernetesClusterDomain: cluster.local
myConfig:
  dummyconfigmapkey: dummyconfigmapvalue
  myConfigProperties:
    health:
      healthProbeBindAddress: "8081"
    metrics:
      bindAddress: 127.0.0.1:8080
myConfigProps:
  myProp1: "1"
  myProp2: val 1
  myProp3: "true"
  myvalYaml: |-
    apiVersion: clickhouse.altinity.com/v1
    kind: ClickHouseInstallationTemplate
    metadata:
      name: default-oneperhost-pod-template
    spec:
      templates:
        podTemplates:
          - name: default-oneperhost-pod-template
            distribution: "OnePerHost"
mySecretCa:
  caCrt: ""
mySecretVars:
  elasticFoobarHunter123MeowtownVerify: ""
  str: ""
  var1: ""
  var2: ""
myapp:
  replicas: 3
myappService:
  ports:
  - name: https
    port: 8443
    targetPort: https
  type: ClusterIP
nodeSelector: '{{- toYaml .Values.myapp.nodeSelector | nindent 8 }}'
pvc:
  mySamplePvClaim:
    storageClass: manual
    storageLimit: 5Gi
    storageRequest: 3Gi
securityContext:
  runAsNonRoot: true
terminationGracePeriodSeconds: 10
tolerations:
- effect: NoSchedule
  key: node-role.kubernetes.io/master
  operator: Exists
volumes:
- configMap:
    name: '{{ include "app.fullname" . }}-my-config'
  name: manager-config
- configMap:
    name: '{{ include "app.fullname" . }}-my-config-props'
  name: props
- name: secret-volume
  secret:
    secretName: '{{ include "app.fullname" . }}-my-secret-ca'
- name: sample-pv-storage
  persistentVolumeClaim:
    claimName: '{{ include "app.fullname" . }}-my-sample-pv-claim'
- hostPath:
    path: /var/log
  name: varlog
- hostPath:
    path: /var/lib/docker/containers
  name: varlibdockercontainers
